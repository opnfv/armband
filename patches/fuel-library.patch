diff --git a/deployment/puppet/cobbler/lib/puppet/type/cobbler_distro.rb b/deployment/puppet/cobbler/lib/puppet/type/cobbler_distro.rb
index a70568a..1588186 100644
--- a/deployment/puppet/cobbler/lib/puppet/type/cobbler_distro.rb
+++ b/deployment/puppet/cobbler/lib/puppet/type/cobbler_distro.rb
@@ -26,7 +26,7 @@ Puppet::Type.newtype(:cobbler_distro) do
 
   newparam(:arch) do
     desc "Architecture"
-    newvalues(/^(x86_64|i386)$/)
+    newvalues(/^(x86_64|i386|arm64)$/)
   end
 
   newparam(:ksmeta) do
diff --git a/deployment/puppet/cobbler/manifests/distro/ubuntu_1404_arm64.pp b/deployment/puppet/cobbler/manifests/distro/ubuntu_1404_arm64.pp
index e69de29..dcb20fa 100644
--- a/deployment/puppet/cobbler/manifests/distro/ubuntu_1404_arm64.pp
+++ b/deployment/puppet/cobbler/manifests/distro/ubuntu_1404_arm64.pp
@@ -0,0 +1,97 @@
+#    Copyright 2013 Mirantis, Inc.
+#
+#    Licensed under the Apache License, Version 2.0 (the "License"); you may
+#    not use this file except in compliance with the License. You may obtain
+#    a copy of the License at
+#
+#         http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+#    License for the specific language governing permissions and limitations
+#    under the License.
+
+
+class cobbler::distro::ubuntu_1404_arm64(
+  $http_iso = 'https://YARMOUTH_PPA_USERNAME:YARMOUTH_PPA_PASSWORD@private-ppa.launchpad.net/yarmouth-team/ppa/ubuntu/dists/trusty/main/installer-arm64/current/images/netboot/mini.iso',
+  $ks_url   = 'http://us.archive.ubuntu.com/ubuntu',
+  ){
+
+  Exec {path => '/usr/bin:/bin:/usr/sbin:/sbin'}
+
+  case $::operatingsystem {
+    /(?i)(centos|redhat)/:  {
+      $ks_mirror = '/var/www/cobbler/ks_mirror'
+    }
+    /(?i)(debian|ubuntu)/:  {
+      $ks_mirror = '/usr/share/cobbler/webroot/cobbler/ks_mirror'
+    }
+  }
+
+  # mini
+  $iso_name = extension_basename($http_iso, 'true')
+  # mini.iso
+  $iso_basename = extension_basename($http_iso)
+  # /var/www/cobbler/ks_mirror/ubuntu-14.04-arm64-mini.iso
+  $iso = "${ks_mirror}/ubuntu-14.04-arm64-${iso_basename}"
+  # /var/www/cobbler/ks_mirror/ubuntu-14.04-arm64-mini
+  $iso_mnt = "${ks_mirror}/ubuntu-14.04-arm64-${iso_name}"
+  # /var/www/cobbler/links/ubuntu-14.04-arm64-mini
+  $iso_link = "/var/www/cobbler/links/${iso_name}"
+
+  if $ks_url == 'cobbler' {
+    $tree_host = "@@server@@"
+    $tree_url = "/cblr/links/${iso_name}"
+  }
+  else {
+    $tree_host = inline_template("<%= @ks_url.split('http://')[1].split('/')[0] %>")
+    $tree_url = inline_template("/<%= @ks_url.split('http://')[1].split('/')[1 .. -1].join('/') %>")
+  }
+
+  file { $iso_mnt:
+    ensure => directory,
+  }
+
+  if $http_iso =~ /^http:\/\/.+/ {
+    # HERE IS ASSUMED THAT wget PACKAGE INSTALLED AS WE NEED IT
+    # TO DOWNLOAD CENTOS ISO IMAGE
+    exec { "get ${http_iso}":
+      command => "wget -q -O- ${http_iso} > ${iso}",
+      timeout => 0,
+      onlyif  => "test ! -s ${iso}",
+    }
+  }
+  elsif $http_iso =~ /^file:\/\/.+/ {
+    $http_iso_path = split($http_iso, 'file://')
+    exec { "get ${http_iso}":
+      command => "cp ${http_iso_path[1]} ${iso}",
+      onlyif  => "test ! -s ${iso}",
+    }
+  }
+
+  mount { $iso_mnt:
+    ensure  => mounted,
+    device  => $iso,
+    options => 'loop',
+    fstype  => 'iso9660',
+    require => [Exec["get ${http_iso}"], File[$iso_mnt]],
+  }
+
+  file { $iso_link:
+    ensure => link,
+    target => $iso_mnt,
+  }
+
+  cobbler_distro { "ubuntu_1404_arm64":
+    kernel    => "${iso_mnt}/linux",
+    initrd    => "${iso_mnt}/initrd.gz",
+    arch      => 'arm64',
+    breed     => 'ubuntu',
+    osversion => 'trusty',
+    ksmeta    => "tree_host=${tree_host} tree_url=${tree_url}",
+    require   => Mount[$iso_mnt],
+  }
+
+
+}
diff --git a/deployment/puppet/cobbler/manifests/profile/ubuntu_1404_arm64.pp b/deployment/puppet/cobbler/manifests/profile/ubuntu_1404_arm64.pp
index e69de29..152a64c 100644
--- a/deployment/puppet/cobbler/manifests/profile/ubuntu_1404_arm64.pp
+++ b/deployment/puppet/cobbler/manifests/profile/ubuntu_1404_arm64.pp
@@ -0,0 +1,68 @@
+#    Copyright 2013 Mirantis, Inc.
+#
+#    Licensed under the Apache License, Version 2.0 (the "License"); you may
+#    not use this file except in compliance with the License. You may obtain
+#    a copy of the License at
+#
+#         http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+#    License for the specific language governing permissions and limitations
+#    under the License.
+#
+#
+#
+# This class is intended to make cobbler profile ubuntu_1404_arm64.
+#
+# [distro] The name of cobbler distro to bind profile to.
+#
+# [ks_system_timezone] System timezone on installed system.
+#
+# [ks_encrypted_root_password] Hash of the root password on installed system.
+
+class cobbler::profile::ubuntu_1404_arm64(
+  $distro  = "ubuntu_1404_arm64",
+  $ks_repo = [
+    {
+      "name" => "Fuel",
+      "url"  => "http://download.mirantis.com/precise-grizzly-fuel-3.2/",
+      "key"  => "http://download.mirantis.com/precise-grizzly-fuel-3.2/Fuel.key",
+      "release" => "trusty",
+      "repos" => "main",
+    },
+  ],
+
+  $ks_system_timezone = "America/Los_Angeles",
+  $linux_kernel_flavor = "thunder",
+  $arch = "arm64",
+
+  # default password is 'r00tme'
+  $ks_encrypted_root_password = "\$6\$tCD3X7ji\$1urw6qEMDkVxOkD33b4TpQAjRiCeDZx0jmgMhDYhfB9KuGfqO9OcMaKyUxnGGWslEDQ4HxTw7vcAMP85NxQe61",
+
+  $kopts = "auto=true priority=critical locale=en_US net.ifnames=0 biosdevname=0 netcfg/choose_interface=auto netcfg/dhcp_timeout=120 netcfg/link_detection_timeout=20",
+  ){
+
+  case $operatingsystem {
+    /(?i)(ubuntu|debian|centos|redhat)$/:  {
+      $ks_dir = "/var/lib/cobbler/kickstarts"
+    }
+  }
+
+  file { "${ks_dir}/ubuntu_1404_arm64.preseed":
+    content => template("cobbler/preseed/ubuntu-1404.preseed.erb"),
+    owner => root,
+    group => root,
+    mode => 0644,
+  } ->
+
+  cobbler_profile { "ubuntu_1404_arm64":
+    kickstart => "${ks_dir}/ubuntu_1404_arm64.preseed",
+    kopts => $kopts,
+    distro => $distro,
+    ksmeta => "",
+    menu => true,
+  }
+
+}
diff --git a/deployment/puppet/cobbler/manifests/profile/ubuntu_1404_x86_64.pp b/deployment/puppet/cobbler/manifests/profile/ubuntu_1404_x86_64.pp
index 30c4602..e419dbe 100644
--- a/deployment/puppet/cobbler/manifests/profile/ubuntu_1404_x86_64.pp
+++ b/deployment/puppet/cobbler/manifests/profile/ubuntu_1404_x86_64.pp
@@ -35,6 +35,8 @@ class cobbler::profile::ubuntu_1404_x86_64(
   ],
 
   $ks_system_timezone = "America/Los_Angeles",
+  $linux_kernel_flavor = "generic-lts-trusty",
+  $arch = "amd64",
 
   # default password is 'r00tme'
   $ks_encrypted_root_password = "\$6\$tCD3X7ji\$1urw6qEMDkVxOkD33b4TpQAjRiCeDZx0jmgMhDYhfB9KuGfqO9OcMaKyUxnGGWslEDQ4HxTw7vcAMP85NxQe61",
diff --git a/deployment/puppet/cobbler/templates/dnsmasq.template.erb b/deployment/puppet/cobbler/templates/dnsmasq.template.erb
index 3a96ac1..8d3e753 100644
--- a/deployment/puppet/cobbler/templates/dnsmasq.template.erb
+++ b/deployment/puppet/cobbler/templates/dnsmasq.template.erb
@@ -33,5 +33,7 @@ dhcp-no-override
 # by assigning IPs one by one instead of using hash algorithm.
 dhcp-sequential-ip
 
+dhcp-match=set:arm64,93,11
+dhcp-boot=net:arm64,grub/grub-aarch64.efi,boothost,<%= @next_server %>
 dhcp-option=6,<%= @name_server %>
 $insert_cobbler_system_definitions
diff --git a/deployment/puppet/cobbler/templates/efidefault.template.erb b/deployment/puppet/cobbler/templates/efidefault.template.erb
index e69de29..af09eb8 100644
--- a/deployment/puppet/cobbler/templates/efidefault.template.erb
+++ b/deployment/puppet/cobbler/templates/efidefault.template.erb
@@ -0,0 +1,5 @@
+set default=1
+set timeout=5
+tr -s ipxe_mac ':' '-' $net_default_mac
+
+$grub_menu_items
diff --git a/deployment/puppet/cobbler/templates/grubprofile.template.erb b/deployment/puppet/cobbler/templates/grubprofile.template.erb
index e69de29..daa92ea 100644
--- a/deployment/puppet/cobbler/templates/grubprofile.template.erb
+++ b/deployment/puppet/cobbler/templates/grubprofile.template.erb
@@ -0,0 +1,13 @@
+menuentry '$profile_name' {
+    echo 'Network status:'
+    net_ls_cards
+    net_ls_addr
+    net_ls_routes
+
+    echo 'Loading Linux ...'
+    linux (tftp)$kernel_path $kernel_options BOOTIF=01-$ipxe_mac
+    echo 'Loading initial ramdisk ...'
+    initrd (tftp)$initrd_path
+    echo 'Booting bootstrap image ...'
+}
+
diff --git a/deployment/puppet/cobbler/templates/grubsystem.template.erb b/deployment/puppet/cobbler/templates/grubsystem.template.erb
index e69de29..daa92ea 100644
--- a/deployment/puppet/cobbler/templates/grubsystem.template.erb
+++ b/deployment/puppet/cobbler/templates/grubsystem.template.erb
@@ -0,0 +1,13 @@
+menuentry '$profile_name' {
+    echo 'Network status:'
+    net_ls_cards
+    net_ls_addr
+    net_ls_routes
+
+    echo 'Loading Linux ...'
+    linux (tftp)$kernel_path $kernel_options BOOTIF=01-$ipxe_mac
+    echo 'Loading initial ramdisk ...'
+    initrd (tftp)$initrd_path
+    echo 'Booting bootstrap image ...'
+}
+
diff --git a/deployment/puppet/cobbler/templates/preseed/ubuntu-1404.preseed.erb b/deployment/puppet/cobbler/templates/preseed/ubuntu-1404.preseed.erb
index fd6dda3..2770808 100644
--- a/deployment/puppet/cobbler/templates/preseed/ubuntu-1404.preseed.erb
+++ b/deployment/puppet/cobbler/templates/preseed/ubuntu-1404.preseed.erb
@@ -31,7 +31,7 @@ $SNIPPET('ubuntu_partition')
 
 #set fuel_version=$getVar('fuel_version', '')
 #if $fuel_version >= '6.0'
-d-i base-installer/kernel/image string linux-image-generic-lts-trusty
+d-i base-installer/kernel/image string linux-image-<%= @linux_kernel_flavor %>
 #else
 d-i base-installer/kernel/image string linux-image-3.11
 #end if
@@ -66,9 +66,9 @@ d-i apt-setup/mirror/error select Retry
 # Use network mirror
 d-i apt-setup/use_mirror boolean true
 
-# Select architecture to amd64. That's very important to dpkg, since
-# by default we have both amd64 and i386.
-d-i apt-setup/multiarch string amd64
+# Select architecture to <%= @arch %>. That's very important to dpkg on
+# amd64, since by default we have both amd64 and i386.
+d-i apt-setup/multiarch string <%= @arch %>
 
 # You can choose to install restricted and universe software, or to install
 # software from the backports repository.
@@ -146,7 +146,7 @@ echo 'Acquire::ForceIPv4 "true";' > /target/etc/apt/apt.conf.d/03force-ipv4 && \
 in-target apt-get update; \
 in-target apt-get upgrade -y; \
 #if $fuel_version >= '6.0'
-in-target apt-get -y install linux-image-generic-lts-trusty linux-headers-generic-lts-trusty; \
+in-target apt-get -y install linux-image-<%= @linux_kernel_flavor %> linux-headers-<%= @linux_kernel_flavor %>; \
 #else
 in-target apt-get -y install linux-image-3.11 linux-headers-3.11; \
 #end if
diff --git a/deployment/puppet/nailgun/manifests/cobbler.pp b/deployment/puppet/nailgun/manifests/cobbler.pp
index a11498c..fe48d25 100644
--- a/deployment/puppet/nailgun/manifests/cobbler.pp
+++ b/deployment/puppet/nailgun/manifests/cobbler.pp
@@ -43,7 +43,7 @@ class nailgun::cobbler(
   $bootstrap_profile = $bootstrap_flavor ? {
     /(?i)centos/                 => 'bootstrap',
     /(?i)ubuntu/                 => 'ubuntu_bootstrap',
-    default                      => 'bootstrap',
+    default                      => 'ubuntu_bootstrap',
   }
 
   if $::osfamily == 'RedHat' {
@@ -205,7 +205,7 @@ class nailgun::cobbler(
         distro    => 'ubuntu_bootstrap',
         menu      => true,
         kickstart => '',
-        kopts     => extend_kopts($bootstrap_meta['extend_kopts'], "console=ttyS0,9600 console=tty0 panic=60 ethdevice-timeout=${bootstrap_ethdevice_timeout} boot=live toram components fetch=http://${server}:8080/bootstraps/active_bootstrap/root.squashfs biosdevname=0 url=${nailgun_api_url} mco_user=${mco_user} mco_pass=${mco_pass}"),
+        kopts     => extend_kopts($bootstrap_meta['extend_kopts'], "console=ttyAMA0,115200 console=ttyS0,115200 panic=60 ethdevice-timeout=${bootstrap_ethdevice_timeout} boot=live toram components fetch=http://${server}:8080/bootstraps/active_bootstrap/root.squashfs biosdevname=0 url=${nailgun_api_url} mco_user=${mco_user} mco_pass=${mco_pass}"),
         ksmeta    => '',
         server    => $real_server,
         require   => Cobbler_distro['ubuntu_bootstrap'],
