From: Alexandru Avadanii <Alexandru.Avadanii@enea.com>
Date: Wed, 4 May 2016 18:31:09 +0200
Subject: [PATCH] deploy/reap.py: Dump extra interfaces information.

Since on AArch64, Ubuntu local mirror lacks arm64 packages (see [1]),
Fuel master requires internet connectivity during deploy, and hence
a way to setup such a public (extra) interface automatically.

Previous commit "transplant: Generate extra interfaces config file"
introduced support for passing this information via DEA (override),
which may define a IFCGF_<interface> section in its 'fuel:'
section, containing the necessary keys to produce a ifcfg-<interface>
file, like in this example:

fuel:
   IFCFG_ETH1:
     device: eth1
     ipaddress: 10.0.1.10
     netmask: 255.255.255.0
     gateway: 10.0.1.254

In order for Network Manager to use the newly added interfaces
for outgoing traffic and honor their GATEWAY setting (e.g. if we just
added one public interface), the default route on admin iface (most of
the time called eth0) is disabled when extra interfaces are present.

[1] https://jira.opnfv.org/browse/ARMBAND-35

Signed-off-by: Alexandu Avadanii <alexandru.avadanii@enea.com>
Signed-off-by: Josep Puigdemont <josep.puigdemont@enea.com>
---
 deploy/reap.py | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/deploy/reap.py b/deploy/reap.py
index bf64d40..18e7adc 100755
--- a/deploy/reap.py
+++ b/deploy/reap.py
@@ -15,6 +15,8 @@ import yaml
 import glob
 import shutil
 import tempfile
+import re
+import netaddr
 
 from common import (
     N,
@@ -245,6 +247,36 @@ class Reap(object):
             if key not in ['ipaddress', 'netmask',
                            'dhcp_pool_start', 'dhcp_pool_end']:
                 del fuel['ADMIN_NETWORK'][key]
+
+        ## FIXME(armband): Factor in support for adding public/other interfaces.
+        interfaces_list = exec_cmd('ip -o -4 a | grep -e "e[nt][hopsx].*"')
+        for interface in re.split('\n', interfaces_list):
+            # Sample output line from above cmd:
+            # 3: eth1 inet 10.0.2.10/24 scope global eth1 valid_lft forever ...
+            ifcfg = re.split(r'\s+', interface)
+
+            # Filter out admin interface (device name is not known, match IP)
+            current_network = netaddr.IPNetwork(ifcfg[3])
+            if str(current_network.ip) == fuel['ADMIN_NETWORK']['ipaddress']:
+                continue
+
+            # Transform ifcfg-* network interface config file into yaml (tmp)
+            ifcfg_orig = ('/etc/sysconfig/network-scripts/ifcfg-%s' % ifcfg[1])
+            ifcfg_yaml = ('%s/ifcfg-%s.yaml' % (self.temp_dir, ifcfg[1]))
+            exec_cmd('sed "s/=/: /g" %s | tr "[:upper:]" "[:lower:]" > %s'
+                     % (ifcfg_orig, ifcfg_yaml))
+
+            # Read network interface config yaml, write IFCFG_<IFNAME> section
+            ifcfg_data = self.read_yaml(ifcfg_yaml)
+            ifcfg_sec = 'IFCFG_%s' % ifcfg[1].upper()
+            fuel[ifcfg_sec] = {}
+
+            # Keep only needed info (e.g. filter-out type=Ethernet).
+            fuel[ifcfg_sec]['ipaddress'] = ifcfg_data['ipaddr']
+            fuel[ifcfg_sec]['device'] = ifcfg_data['device']
+            fuel[ifcfg_sec]['netmask'] = str(current_network.netmask)
+            fuel[ifcfg_sec]['gateway'] = ifcfg_data['gateway']
+
         self.write_yaml(self.dea_file, {'fuel': fuel})
 
     def reap_network_settings(self):
